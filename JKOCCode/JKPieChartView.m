
//
//  PieChartView.m
//  JKOCCode
//
//  Created by silence on 2017/3/16.
//  Copyright © 2017年 silence. All rights reserved.
//

#import "JKPieChartView.h"

@implementation JKPieChartView

- (void)drawRect:(CGRect)rect {
    // This code was generated by Trial version of PaintCode, therefore cannot be used for commercial purposes.
    // http://www.paintcodeapp.com
    
    //// General Declarations
    CGContextRef context = UIGraphicsGetCurrentContext();
    
    //// Color Declarations
    UIColor* color3 = [UIColor colorWithRed: 0.334 green: 0.817 blue: 0.578 alpha: 1];
    UIColor* color5 = [UIColor colorWithRed: 0.828 green: 0.246 blue: 0.072 alpha: 1];
    UIColor* color6 = [UIColor colorWithRed: 1 green: 0 blue: 0.847 alpha: 1];
    UIColor* color7 = [UIColor colorWithRed: 0.966 green: 1 blue: 0 alpha: 1];
    
    //// Oval Drawing
    CGRect ovalRect = CGRectMake(124.5, 23.5, 55, 55);
    UIBezierPath* ovalPath = [UIBezierPath bezierPath];
    [ovalPath addArcWithCenter: CGPointMake(CGRectGetMidX(ovalRect), CGRectGetMidY(ovalRect)) radius: ovalRect.size.width / 2 startAngle: -60 * M_PI/180 endAngle: 0 * M_PI/180 clockwise: YES];
    [ovalPath addLineToPoint: CGPointMake(CGRectGetMidX(ovalRect), CGRectGetMidY(ovalRect))];
    [ovalPath closePath];
    
    [color3 setFill];
    [ovalPath fill];
    [UIColor.whiteColor setStroke];
    ovalPath.lineWidth = 1;
    [ovalPath stroke];
    
    
    //// Oval 2 Drawing
    CGContextSaveGState(context);
    CGContextTranslateCTM(context, 116, 60);
    CGContextRotateCTM(context, -61 * M_PI/180);
    
    CGRect oval2Rect = CGRectMake(0, 0, 50, 50);
    UIBezierPath* oval2Path = [UIBezierPath bezierPath];
    [oval2Path addArcWithCenter: CGPointMake(CGRectGetMidX(oval2Rect), CGRectGetMidY(oval2Rect)) radius: oval2Rect.size.width / 2 startAngle: -80 * M_PI/180 endAngle: 0 * M_PI/180 clockwise: YES];
    [oval2Path addLineToPoint: CGPointMake(CGRectGetMidX(oval2Rect), CGRectGetMidY(oval2Rect))];
    [oval2Path closePath];
    
    [color5 setFill];
    [oval2Path fill];
    
    CGContextRestoreGState(context);
    
    
    //// Oval 3 Drawing
    CGContextSaveGState(context);
    CGContextTranslateCTM(context, 153.3, 86);
    CGContextRotateCTM(context, -141 * M_PI/180);
    
    CGRect oval3Rect = CGRectMake(0, 0, 50, 50);
    UIBezierPath* oval3Path = [UIBezierPath bezierPath];
    [oval3Path addArcWithCenter: CGPointMake(CGRectGetMidX(oval3Rect), CGRectGetMidY(oval3Rect)) radius: oval3Rect.size.width / 2 startAngle: -110 * M_PI/180 endAngle: 0 * M_PI/180 clockwise: YES];
    [oval3Path addLineToPoint: CGPointMake(CGRectGetMidX(oval3Rect), CGRectGetMidY(oval3Rect))];
    [oval3Path closePath];
    
    [UIColor.blueColor setFill];
    [oval3Path fill];
    
    CGContextRestoreGState(context);
    
    
    //// Oval 5 Drawing
    CGContextSaveGState(context);
    CGContextTranslateCTM(context, 235.83, 52.44);
    CGContextRotateCTM(context, -251 * M_PI/180);
    
    CGRect oval5Rect = CGRectMake(2.01, 56.46, 50, 50);
    UIBezierPath* oval5Path = [UIBezierPath bezierPath];
    [oval5Path addArcWithCenter: CGPointMake(CGRectGetMidX(oval5Rect), CGRectGetMidY(oval5Rect)) radius: oval5Rect.size.width / 2 startAngle: -70 * M_PI/180 endAngle: 0 * M_PI/180 clockwise: YES];
    [oval5Path addLineToPoint: CGPointMake(CGRectGetMidX(oval5Rect), CGRectGetMidY(oval5Rect))];
    [oval5Path closePath];
    
    [color6 setFill];
    [oval5Path fill];
    
    CGContextRestoreGState(context);
    
    
    //// Oval 6 Drawing
    CGContextSaveGState(context);
    CGContextTranslateCTM(context, 147, 14.5);
    CGContextRotateCTM(context, -321 * M_PI/180);
    
    CGRect oval6Rect = CGRectMake(0, 0, 50, 50);
    UIBezierPath* oval6Path = [UIBezierPath bezierPath];
    [oval6Path addArcWithCenter: CGPointMake(CGRectGetMidX(oval6Rect), CGRectGetMidY(oval6Rect)) radius: oval6Rect.size.width / 2 startAngle: -40 * M_PI/180 endAngle: 0 * M_PI/180 clockwise: YES];
    [oval6Path addLineToPoint: CGPointMake(CGRectGetMidX(oval6Rect), CGRectGetMidY(oval6Rect))];
    [oval6Path closePath];
    
    [color7 setFill];
    [oval6Path fill];
    
    CGContextRestoreGState(context);
    
    
    //// Text Drawing
    CGRect textRect = CGRectMake(186, 25, 54, 9);
    {
        NSString* textContent = @"微信 25%";
        NSMutableParagraphStyle* textStyle = [[NSMutableParagraphStyle alloc] init];
        textStyle.alignment = NSTextAlignmentLeft;
        NSDictionary* textFontAttributes = @{NSFontAttributeName: [UIFont systemFontOfSize: 8], NSForegroundColorAttributeName: color3, NSParagraphStyleAttributeName: textStyle};
        
        CGFloat textTextHeight = [textContent boundingRectWithSize: CGSizeMake(textRect.size.width, INFINITY) options: NSStringDrawingUsesLineFragmentOrigin attributes: textFontAttributes context: nil].size.height;
        CGContextSaveGState(context);
        CGContextClipToRect(context, textRect);
        [textContent drawInRect: CGRectMake(CGRectGetMinX(textRect), CGRectGetMinY(textRect) + (textRect.size.height - textTextHeight) / 2, textRect.size.width, textTextHeight) withAttributes: textFontAttributes];
        CGContextRestoreGState(context);
    }
    
    
    //// Text 2 Drawing
    CGRect text2Rect = CGRectMake(182, 57, 54, 9);
    {
        NSString* textContent = @"京东钱包25%";
        NSMutableParagraphStyle* text2Style = [[NSMutableParagraphStyle alloc] init];
        text2Style.alignment = NSTextAlignmentLeft;
        NSDictionary* text2FontAttributes = @{NSFontAttributeName: [UIFont systemFontOfSize: 8], NSForegroundColorAttributeName: color7, NSParagraphStyleAttributeName: text2Style};
        
        CGFloat text2TextHeight = [textContent boundingRectWithSize: CGSizeMake(text2Rect.size.width, INFINITY) options: NSStringDrawingUsesLineFragmentOrigin attributes: text2FontAttributes context: nil].size.height;
        CGContextSaveGState(context);
        CGContextClipToRect(context, text2Rect);
        [textContent drawInRect: CGRectMake(CGRectGetMinX(text2Rect), CGRectGetMinY(text2Rect) + (text2Rect.size.height - text2TextHeight) / 2, text2Rect.size.width, text2TextHeight) withAttributes: text2FontAttributes];
        CGContextRestoreGState(context);
    }
    
    
    //// Text 3 Drawing
    CGRect text3Rect = CGRectMake(158, 76, 54, 9);
    {
        NSString* textContent = @"百度钱包25%";
        NSMutableParagraphStyle* text3Style = [[NSMutableParagraphStyle alloc] init];
        text3Style.alignment = NSTextAlignmentLeft;
        NSDictionary* text3FontAttributes = @{NSFontAttributeName: [UIFont systemFontOfSize: 8], NSForegroundColorAttributeName: color6, NSParagraphStyleAttributeName: text3Style};
        
        CGFloat text3TextHeight = [textContent boundingRectWithSize: CGSizeMake(text3Rect.size.width, INFINITY) options: NSStringDrawingUsesLineFragmentOrigin attributes: text3FontAttributes context: nil].size.height;
        CGContextSaveGState(context);
        CGContextClipToRect(context, text3Rect);
        [textContent drawInRect: CGRectMake(CGRectGetMinX(text3Rect), CGRectGetMinY(text3Rect) + (text3Rect.size.height - text3TextHeight) / 2, text3Rect.size.width, text3TextHeight) withAttributes: text3FontAttributes];
        CGContextRestoreGState(context);
    }
    
    
    //// Text 4 Drawing
    CGRect text4Rect = CGRectMake(64, 57, 54, 9);
    {
        NSString* textContent = @"QQ钱包25%";
        NSMutableParagraphStyle* text4Style = [[NSMutableParagraphStyle alloc] init];
        text4Style.alignment = NSTextAlignmentRight;
        NSDictionary* text4FontAttributes = @{NSFontAttributeName: [UIFont systemFontOfSize: 8], NSForegroundColorAttributeName: UIColor.blueColor, NSParagraphStyleAttributeName: text4Style};
        
        CGFloat text4TextHeight = [textContent boundingRectWithSize: CGSizeMake(text4Rect.size.width, INFINITY) options: NSStringDrawingUsesLineFragmentOrigin attributes: text4FontAttributes context: nil].size.height;
        CGContextSaveGState(context);
        CGContextClipToRect(context, text4Rect);
        [textContent drawInRect: CGRectMake(CGRectGetMinX(text4Rect), CGRectGetMinY(text4Rect) + (text4Rect.size.height - text4TextHeight) / 2, text4Rect.size.width, text4TextHeight) withAttributes: text4FontAttributes];
        CGContextRestoreGState(context);
    }
    
    
    //// Text 5 Drawing
    CGRect text5Rect = CGRectMake(88, 16, 54, 9);
    {
        NSString* textContent = @"支付宝25%";
        NSMutableParagraphStyle* text5Style = [[NSMutableParagraphStyle alloc] init];
        text5Style.alignment = NSTextAlignmentRight;
        NSDictionary* text5FontAttributes = @{NSFontAttributeName: [UIFont systemFontOfSize: 8], NSForegroundColorAttributeName: color5, NSParagraphStyleAttributeName: text5Style};
        
        CGFloat text5TextHeight = [textContent boundingRectWithSize: CGSizeMake(text5Rect.size.width, INFINITY) options: NSStringDrawingUsesLineFragmentOrigin attributes: text5FontAttributes context: nil].size.height;
        CGContextSaveGState(context);
        CGContextClipToRect(context, text5Rect);
        [textContent drawInRect: CGRectMake(CGRectGetMinX(text5Rect), CGRectGetMinY(text5Rect) + (text5Rect.size.height - text5TextHeight) / 2, text5Rect.size.width, text5TextHeight) withAttributes: text5FontAttributes];
        CGContextRestoreGState(context);
    }
    
    
    //// Bezier Drawing
    UIBezierPath* bezierPath = [UIBezierPath bezierPath];
    [bezierPath moveToPoint: CGPointMake(183.5, 31.5)];
    [bezierPath addLineToPoint: CGPointMake(165.5, 40.5)];
    [bezierPath closePath];
    [UIColor.grayColor setFill];
    [bezierPath fill];
    [UIColor.blackColor setStroke];
    bezierPath.lineWidth = 1;
    [bezierPath stroke];

}


@end
