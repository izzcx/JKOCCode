//
//  JKNetChartView.m
//  JKOCCode
//
//  Created by silence on 2017/3/16.
//  Copyright © 2017年 silence. All rights reserved.
//

#import "JKNetChartView.h"

@implementation JKNetChartView

- (void)drawRect:(CGRect)rect {
    // This code was generated by Trial version of PaintCode, therefore cannot be used for commercial purposes.
    // http://www.paintcodeapp.com
    
    //// General Declarations
    CGContextRef context = UIGraphicsGetCurrentContext();
    
    //// Color Declarations
    UIColor* color8 = [UIColor colorWithRed: 0.738 green: 0.708 blue: 0.204 alpha: 1];
    
    //// Bezier Drawing
    UIBezierPath* bezierPath = [UIBezierPath bezierPath];
    [bezierPath moveToPoint: CGPointMake(105.5, 60.5)];
    [bezierPath addCurveToPoint: CGPointMake(268.5, 60.5) controlPoint1: CGPointMake(105.5, 60.5) controlPoint2: CGPointMake(227.75, 60.5)];
    [UIColor.blackColor setStroke];
    bezierPath.lineWidth = 1;
    [bezierPath setLineDash: (CGFloat[]){2, 2} count: 2 phase: 0];
    [bezierPath stroke];
    
    
    //// Bezier 2 Drawing
    UIBezierPath* bezier2Path = [UIBezierPath bezierPath];
    [bezier2Path moveToPoint: CGPointMake(105.5, 82.5)];
    [bezier2Path addLineToPoint: CGPointMake(267.5, 82.5)];
    [UIColor.blackColor setStroke];
    bezier2Path.lineWidth = 1;
    [bezier2Path setLineDash: (CGFloat[]){2, 2} count: 2 phase: 0];
    [bezier2Path stroke];
    
    
    //// Bezier 3 Drawing
    UIBezierPath* bezier3Path = [UIBezierPath bezierPath];
    [bezier3Path moveToPoint: CGPointMake(105.5, 39.5)];
    [bezier3Path addLineToPoint: CGPointMake(264.5, 39.5)];
    [UIColor.blackColor setStroke];
    bezier3Path.lineWidth = 1;
    [bezier3Path setLineDash: (CGFloat[]){2, 2} count: 2 phase: 0];
    [bezier3Path stroke];
    
    
    //// Rectangle Drawing
    UIBezierPath* rectanglePath = [UIBezierPath bezierPathWithRect: CGRectMake(105.5, 16.5, 163, 100)];
    [UIColor.blackColor setStroke];
    rectanglePath.lineWidth = 1;
    [rectanglePath setLineDash: (CGFloat[]){2, 2} count: 2 phase: 0];
    [rectanglePath stroke];
    
    
    //// Bezier 4 Drawing
    UIBezierPath* bezier4Path = [UIBezierPath bezierPath];
    [bezier4Path moveToPoint: CGPointMake(106.5, 98.5)];
    [bezier4Path addCurveToPoint: CGPointMake(266.5, 98.5) controlPoint1: CGPointMake(110.5, 99.5) controlPoint2: CGPointMake(266.5, 98.5)];
    [UIColor.blackColor setStroke];
    bezier4Path.lineWidth = 1;
    [bezier4Path setLineDash: (CGFloat[]){2, 2} count: 2 phase: 0];
    [bezier4Path stroke];
    
    
    //// Rectangle 2 Drawing
    UIBezierPath* rectangle2Path = [UIBezierPath bezierPathWithRoundedRect: CGRectMake(39, 31, 50, 16) cornerRadius: 8];
    [UIColor.whiteColor setFill];
    [rectangle2Path fill];
    
    
    //// Text Drawing
    CGRect textRect = CGRectMake(36, 30, 56, 18);
    {
        NSString* textContent = @"支付宝25%";
        NSMutableParagraphStyle* textStyle = [[NSMutableParagraphStyle alloc] init];
        textStyle.alignment = NSTextAlignmentCenter;
        NSDictionary* textFontAttributes = @{NSFontAttributeName: [UIFont systemFontOfSize: 8], NSForegroundColorAttributeName: UIColor.blackColor, NSParagraphStyleAttributeName: textStyle};
        
        CGFloat textTextHeight = [textContent boundingRectWithSize: CGSizeMake(textRect.size.width, INFINITY) options: NSStringDrawingUsesLineFragmentOrigin attributes: textFontAttributes context: nil].size.height;
        CGContextSaveGState(context);
        CGContextClipToRect(context, textRect);
        [textContent drawInRect: CGRectMake(CGRectGetMinX(textRect), CGRectGetMinY(textRect) + (textRect.size.height - textTextHeight) / 2, textRect.size.width, textTextHeight) withAttributes: textFontAttributes];
        CGContextRestoreGState(context);
    }
    
    
    //// Bezier 5 Drawing
    UIBezierPath* bezier5Path = [UIBezierPath bezierPath];
    [bezier5Path moveToPoint: CGPointMake(132.5, 15.5)];
    [bezier5Path addLineToPoint: CGPointMake(132.5, 116.5)];
    [UIColor.blackColor setStroke];
    bezier5Path.lineWidth = 1;
    [bezier5Path setLineDash: (CGFloat[]){2, 2} count: 2 phase: 0];
    [bezier5Path stroke];
    
    
    //// Bezier 6 Drawing
    UIBezierPath* bezier6Path = [UIBezierPath bezierPath];
    [bezier6Path moveToPoint: CGPointMake(159.5, 15.5)];
    [bezier6Path addLineToPoint: CGPointMake(159.5, 115.5)];
    [UIColor.blackColor setStroke];
    bezier6Path.lineWidth = 1;
    [bezier6Path setLineDash: (CGFloat[]){2, 2} count: 2 phase: 0];
    [bezier6Path stroke];
    
    
    //// Bezier 7 Drawing
    UIBezierPath* bezier7Path = [UIBezierPath bezierPath];
    [bezier7Path moveToPoint: CGPointMake(185.5, 15.5)];
    [bezier7Path addLineToPoint: CGPointMake(185.5, 115.5)];
    [UIColor.blackColor setStroke];
    bezier7Path.lineWidth = 1;
    [bezier7Path setLineDash: (CGFloat[]){2, 2} count: 2 phase: 0];
    [bezier7Path stroke];
    
    
    //// Bezier 8 Drawing
    UIBezierPath* bezier8Path = [UIBezierPath bezierPath];
    [bezier8Path moveToPoint: CGPointMake(215.5, 15.5)];
    [bezier8Path addLineToPoint: CGPointMake(215.5, 115.5)];
    [UIColor.blackColor setStroke];
    bezier8Path.lineWidth = 1;
    [bezier8Path setLineDash: (CGFloat[]){1, 1} count: 2 phase: 0];
    [bezier8Path stroke];
    
    
    //// Bezier 9 Drawing
    UIBezierPath* bezier9Path = [UIBezierPath bezierPath];
    [bezier9Path moveToPoint: CGPointMake(244.5, 15.5)];
    [bezier9Path addLineToPoint: CGPointMake(244.5, 116.5)];
    [UIColor.blackColor setStroke];
    bezier9Path.lineWidth = 1;
    [bezier9Path setLineDash: (CGFloat[]){1, 1} count: 2 phase: 0];
    [bezier9Path stroke];
    
    
    //// Oval Drawing
    UIBezierPath* ovalPath = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(130, 36, 6, 6)];
    [UIColor.grayColor setFill];
    [ovalPath fill];
    
    
    //// Oval 2 Drawing
    UIBezierPath* oval2Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(157, 47, 6, 6)];
    [UIColor.grayColor setFill];
    [oval2Path fill];
    
    
    //// Oval 3 Drawing
    UIBezierPath* oval3Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(263, 15, 6, 6)];
    [UIColor.grayColor setFill];
    [oval3Path fill];
    
    
    //// Oval 4 Drawing
    UIBezierPath* oval4Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(139, 57, 6, 6)];
    [UIColor.grayColor setFill];
    [oval4Path fill];
    
    
    //// Oval 5 Drawing
    UIBezierPath* oval5Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(213, 57, 6, 6)];
    [UIColor.grayColor setFill];
    [oval5Path fill];
    
    
    //// Oval 6 Drawing
    UIBezierPath* oval6Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(239, 47, 6, 6)];
    [UIColor.grayColor setFill];
    [oval6Path fill];
    
    
    //// Oval 7 Drawing
    UIBezierPath* oval7Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(182, 63, 6, 6)];
    [UIColor.grayColor setFill];
    [oval7Path fill];
    
    
    //// Oval 8 Drawing
    UIBezierPath* oval8Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(169, 79, 6, 6)];
    [UIColor.grayColor setFill];
    [oval8Path fill];
    
    
    //// Bezier 10 Drawing
    UIBezierPath* bezier10Path = [UIBezierPath bezierPath];
    [bezier10Path moveToPoint: CGPointMake(133.5, 38.5)];
    [bezier10Path addLineToPoint: CGPointMake(142.5, 60.5)];
    [bezier10Path addLineToPoint: CGPointMake(159.5, 50.5)];
    [bezier10Path addLineToPoint: CGPointMake(171.5, 81.5)];
    [bezier10Path addLineToPoint: CGPointMake(184.5, 66.5)];
    [bezier10Path addLineToPoint: CGPointMake(216.5, 60.5)];
    [bezier10Path addLineToPoint: CGPointMake(241.5, 50.5)];
    [bezier10Path addLineToPoint: CGPointMake(266.5, 18.5)];
    [color8 setStroke];
    bezier10Path.lineWidth = 1;
    [bezier10Path stroke];

}


@end
